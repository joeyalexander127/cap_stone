<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

   <context:annotation-config/>
   <context:component-scan base-package="com.layers.app" />
   
   <mvc:annotation-driven />
   <!-- <mvc:view-controller path="/" view-name="login" />
   <mvc:view-controller path="/login" view-name="login" /> -->
   <mvc:resources mapping="/resources/**" location="/resources/" cache-period="31556926"/>
   
   <mvc:interceptors>
   		<mvc:interceptor>
			<mvc:mapping path="/login/**" />
			<mvc:mapping path="/liquor/**" />
			<mvc:mapping path="/scale/**"/>
			<mvc:mapping path="/activity/**"/>
		<bean class="com.layers.app.util.LoggingInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
  	<bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>
 	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<value>/WEB-INF/layouts/views.xml</value>
			</list>
		</property>
	</bean>
	
    <!-- Configuration Parameters -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location" value="classpath:config.properties" />
    </bean>
    
    <!-- MySQL Config.Properties Datasource -->
    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp2.BasicDataSource">
    	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${db.connection}" />
    	<property name="username" value="${db.username}" />
    	<property name="password" value="${db.password}" />
    </bean>
  
    <!-- Setup Transaction Manager -->
    <aop:config>
        <aop:pointcut id="allServiceMethods" expression="execution(* com.app.business.*Interface.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allServiceMethods" />
    </aop:config>
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
	
<!-- 	<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/>
 -->	
	<!-- Dependency Injection -->
	
	<!-- Controllers -->
	<bean id="userController" class="com.layers.app.controller.UserController">
	</bean>
	
	<bean id="liquorController" class="com.layers.app.controller.LiquorController">
	</bean>
	
	<bean id="scaleController" class="com.layers.app.controller.ScaleController">
	</bean>
	
	<bean id="activityController" class="com.layers.app.controller.ActivityController">
	</bean>
	
	<bean id="locationController" class="com.layers.app.controller.LocationController">
	</bean>
	
	<bean id="loggerFilter" class="com.layers.app.util.LoggerFilter"
		scope="singleton">
				
			<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	
	<!-- Business Services -->
	<bean id="userService" class="com.layers.app.business.UserBusinessService"
			scope="singleton">
			
			<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	<bean id="liquorService" class="com.layers.app.business.LiquorBusinessService"
			scope="singleton">
			
			<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	<bean id="spoutService" class="com.layers.app.business.ScaleBusinessService"
			scope="singleton">
			
			<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	
<!-- 	<bean id="activityService" class="com.layers.app.business.ActivityBusinessService"
			scope="singleton">
			
			<aop:scoped-proxy proxy-target-class="false" />
	</bean> -->
	
	<bean id="locationService" class="com.layers.app.business.LocationBusinessService"
		scope="singleton">
		
			<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
    <property name="scopes">
        <map>
            <entry key="session">
                <bean class="org.springframework.context.support.SimpleThreadScope"/>
            </entry>
        </map>
    </property>
	</bean>
	
	<!-- Data Services -->
	<bean id="liquorDataService" class="com.layers.app.data.LiquorDataService">
 		<property name="dataSource" ref="dataSource" /> 
 	</bean>
 	
 	<bean id="userDataService" class="com.layers.app.data.UserDataService">
			<property name="dataSource" ref="dataSource" /> 
 	</bean>
 	
 	<bean id="spoutDataService" class="com.layers.app.data.ScaleDataService">
		 	<property name="dataSource" ref="dataSource" />
 	</bean>
 	
 <!-- 	<bean id="activtyDataService" class="com.layers.app.data.ActivityDataService">
		 	<property name="dataSource" ref="dataSource" />
 	</bean> -->
 	
 	<bean id="locationDataService" class="com.layers.app.data.LocationDataService">
		 	<property name="dataSource" ref="dataSource" />
 	</bean>
 	
 </beans>